name: Terraform Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Checkout du code source
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Show contents of kubeconfig
        run: cat $KUBECONFIG
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG_PATH }}
          
      # Étape 2: Configurer Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.4.0'

      - name: Set up Azure environment variables
        run: |
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CREDENTIALS.clientId }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_CREDENTIALS.clientSecret }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_CREDENTIALS.tenantId }}" >> $GITHUB_ENV

      # Étape 3: Authentification à Azure
      - name: Set up Azure Credentials
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} 

      # Étape 4: Initialiser Terraform
      - name: Terraform Init
        run: terraform init

      # Étape 5: Générer le Plan Terraform
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        id: plan
        env:
          TF_VAR_fluxcd_key: ${{ secrets.FLUXCD_KEY }}
          TF_VAR_fluxcd_key_pub: ${{ secrets.FLUXCD_KEY_PUB }}
          TF_VAR_known_hosts: ${{ secrets.KNOWN_HOSTS }}

      # Étape 7: Attendre l'approbation manuelle pour appliquer le plan
      - name: Apply Terraform Plan (Manual Approval)
        run: terraform apply -auto-approve tfplan
        env:
            TF_VAR_fluxcd_key: ${{ secrets.FLUXCD_KEY }}
            TF_VAR_fluxcd_key_pub: ${{ secrets.FLUXCD_KEY_PUB }}
            TF_VAR_known_hosts: ${{ secrets.KNOWN_HOSTS }}

  

