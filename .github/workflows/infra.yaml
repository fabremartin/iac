name: Terraform Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Checkout du code source
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create SSH Key for FluxCD
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.FLUXCD_KEY }}" > ~/.ssh/fluxcd-key
          echo "${{ secrets.FLUXCD_KEY_PUB }}" > ~/.ssh/fluxcd-key.pub
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/fluxcd-key
          chmod 644 ~/.ssh/fluxcd-key.pub


      # Étape 2: Configurer Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.4.0'

      # Étape 3: Authentification à Azure
      - name: Set up Azure Credentials
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Étape 4: Initialiser Terraform
      - name: Terraform Init
        run: terraform init

      # Étape 5: Générer le Plan Terraform
      - name: Terraform Plan
        run: terraform plan
        id: plan

      # Étape 6: Upload du Plan Terraform pour approbation manuelle
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # Étape 7: Attendre l'approbation manuelle pour appliquer le plan
      - name: Apply Terraform Plan (Manual Approval)
        if: github.event_name == 'workflow_dispatch'
        run: |
          terraform apply -auto-approve tfplan
        env:
          TF_VAR_fluxcd_key: ${{ secrets.FLUXCD_KEY }}
          TF_VAR_fluxcd_key_pub: ${{ secrets.FLUXCD_KEY_PUB }}
          TF_VAR_known_hosts: ${{ secrets.KNOWN_HOSTS }}
